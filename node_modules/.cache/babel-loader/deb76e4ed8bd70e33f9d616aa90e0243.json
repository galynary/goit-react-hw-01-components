{"ast":null,"code":"import{StatisticsList,Title,Stats,Item,Label,Percentage}from'./Statistics.styled';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function randomHexColor(){return\"#\".concat(Math.floor(Math.random()*16777215).toString(16));}export default function Statistics(_ref){var title=_ref.title,stats=_ref.stats;return/*#__PURE__*/_jsxs(StatisticsList,{children:[title&&/*#__PURE__*/_jsx(Title,{children:title}),/*#__PURE__*/_jsx(Stats,{children:stats.map(function(_ref2){var id=_ref2.id,label=_ref2.label,percentage=_ref2.percentage;return/*#__PURE__*/_jsxs(Item,{color:\"\".concat(randomHexColor()),children:[/*#__PURE__*/_jsx(Label,{children:label}),/*#__PURE__*/_jsxs(Percentage,{children:[percentage,\"%\"]})]},id);})})]});}","map":{"version":3,"sources":["C:/Users/anast/Documents/GitHub/goit-js-hw-11/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"names":["StatisticsList","Title","Stats","Item","Label","Percentage","randomHexColor","Math","floor","random","toString","Statistics","title","stats","map","id","label","percentage"],"mappings":"AAEA,OACEA,cADF,CAEEC,KAFF,CAGEC,KAHF,CAIEC,IAJF,CAKEC,KALF,CAMEC,UANF,KAOO,qBAPP,C,wFASA,QAASC,CAAAA,cAAT,EAA0B,CACxB,iBAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAX,EACD,CAED,cAAe,SAASC,CAAAA,UAAT,MAAsC,IAAhBC,CAAAA,KAAgB,MAAhBA,KAAgB,CAATC,KAAS,MAATA,KAAS,CACnD,mBACE,MAAC,cAAD,YACGD,KAAK,eAAI,KAAC,KAAD,WAAQA,KAAR,EADZ,cAEE,KAAC,KAAD,WACGC,KAAK,CAACC,GAAN,CAAU,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,CAAOC,KAAP,OAAOA,KAAP,CAAcC,UAAd,OAAcA,UAAd,oBACT,MAAC,IAAD,EAAe,KAAK,WAAKX,cAAc,EAAnB,CAApB,wBACE,KAAC,KAAD,WAAQU,KAAR,EADF,cAEE,MAAC,UAAD,YAAaC,UAAb,OAFF,GAAWF,EAAX,CADS,EAAV,CADH,EAFF,GADF,CAaD","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport {\r\n  StatisticsList,\r\n  Title,\r\n  Stats,\r\n  Item,\r\n  Label,\r\n  Percentage,\r\n} from './Statistics.styled';\r\n\r\nfunction randomHexColor() {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n}\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <StatisticsList>\r\n      {title && <Title>{title}</Title>}\r\n      <Stats>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <Item key={id} color={`${randomHexColor()}`}>\r\n            <Label>{label}</Label>\r\n            <Percentage>{percentage}%</Percentage>\r\n          </Item>\r\n        ))}\r\n      </Stats>\r\n    </StatisticsList>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}