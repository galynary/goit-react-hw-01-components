{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Documents\\\\GitHub\\\\goit-js-hw-11\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport { StatisticsList, Title, Stats, Item, Label, Percentage } from './Statistics.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction randomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nexport default function Statistics(_ref) {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StatisticsList, {\n    children: [title && /*#__PURE__*/_jsxDEV(Title, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      children: stats.map(_ref2 => {\n        let {\n          id,\n          label,\n          percentage\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Item, {\n          color: `${randomHexColor()}`,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Percentage, {\n            children: [percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Statistics;\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["C:/Users/anast/Documents/GitHub/goit-js-hw-11/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"names":["PropTypes","StatisticsList","Title","Stats","Item","Label","Percentage","randomHexColor","Math","floor","random","toString","Statistics","title","stats","map","id","label","percentage","propTypes","string","isRequired","arrayOf","shape","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,SACEC,cADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,UANF,QAOO,qBAPP;;;AASA,SAASC,cAAT,GAA0B;AACxB,SAAQ,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACD;;AAED,eAAe,SAASC,UAAT,OAAsC;AAAA,MAAlB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAkB;AACnD,sBACE,QAAC,cAAD;AAAA,eACGD,KAAK,iBAAI,QAAC,KAAD;AAAA,gBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,QAAC,KAAD;AAAA,gBACGC,KAAK,CAACC,GAAN,CAAU;AAAA,YAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA;AAAb,SAAD;AAAA,4BACT,QAAC,IAAD;AAAe,UAAA,KAAK,EAAG,GAAEX,cAAc,EAAG,EAA1C;AAAA,kCACE,QAAC,KAAD;AAAA,sBAAQU;AAAR;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAA,uBAAaC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAWF,EAAX;AAAA;AAAA;AAAA;AAAA,gBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAduBJ,U;AAgBxBA,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,KAAK,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UADH;AAErBP,EAAAA,KAAK,EAAEd,SAAS,CAACsB,OAAV,CACLtB,SAAS,CAACuB,KAAV,CAAgB;AACdP,IAAAA,EAAE,EAAEhB,SAAS,CAACoB,MAAV,CAAiBC,UADP;AAEdJ,IAAAA,KAAK,EAAEjB,SAAS,CAACoB,MAAV,CAAiBC,UAFV;AAGdH,IAAAA,UAAU,EAAElB,SAAS,CAACwB,MAAV,CAAiBH;AAHf,GAAhB,CADK;AAFc,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport {\r\n  StatisticsList,\r\n  Title,\r\n  Stats,\r\n  Item,\r\n  Label,\r\n  Percentage,\r\n} from './Statistics.styled';\r\n\r\nfunction randomHexColor() {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n}\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <StatisticsList>\r\n      {title && <Title>{title}</Title>}\r\n      <Stats>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <Item key={id} color={`${randomHexColor()}`}>\r\n            <Label>{label}</Label>\r\n            <Percentage>{percentage}%</Percentage>\r\n          </Item>\r\n        ))}\r\n      </Stats>\r\n    </StatisticsList>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}