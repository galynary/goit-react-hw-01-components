{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Documents\\\\GitHub\\\\goit-js-hw-11\\\\goit-react-hw-01-components\\\\src\\\\components\\\\FriendList\\\\FriendList.jsx\";\nimport { AllFriendList } from './FriendList.styled';\nimport { Friend } from './FriendItem/FriendItem';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FriendList(_ref) {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(AllFriendList, {\n    children: friends.map(_ref2 => {\n      let {\n        id,\n        avatar,\n        name,\n        isOnline\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Friend, {\n        avatar: avatar,\n        name: name,\n        isOnline: isOnline\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.exact({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired\n  }).isRequired).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["C:/Users/anast/Documents/GitHub/goit-js-hw-11/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx"],"names":["AllFriendList","Friend","PropTypes","FriendList","friends","map","id","avatar","name","isOnline","propTypes","arrayOf","exact","string","isRequired","bool","number"],"mappings":";AAAA,SAASA,aAAT,QAA8B,qBAA9B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,OAAO,SAASC,UAAT,OAAiC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACtC,sBACE,QAAC,aAAD;AAAA,cACGA,OAAO,CAACC,GAAR,CAAY;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,MAAN;AAAcC,QAAAA,IAAd;AAAoBC,QAAAA;AAApB,OAAD;AAAA,0BACX,QAAC,MAAD;AAAiB,QAAA,MAAM,EAAEF,MAAzB;AAAiC,QAAA,IAAI,EAAEC,IAAvC;AAA6C,QAAA,QAAQ,EAAEC;AAAvD,SAAaH,EAAb;AAAA;AAAA;AAAA;AAAA,cADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KAReH,U;AAUhBA,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,OAAO,EAAEF,SAAS,CAACS,OAAV,CACPT,SAAS,CAACU,KAAV,CAAgB;AACdL,IAAAA,MAAM,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADX;AAEdN,IAAAA,IAAI,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAFT;AAGdL,IAAAA,QAAQ,EAAEP,SAAS,CAACa,IAAV,CAAeD,UAHX;AAIdR,IAAAA,EAAE,EAAEJ,SAAS,CAACc,MAAV,CAAiBF;AAJP,GAAhB,EAKGA,UANI,EAOPA;AARmB,CAAvB","sourcesContent":["import { AllFriendList } from './FriendList.styled';\nimport { Friend } from './FriendItem/FriendItem';\nimport PropTypes from 'prop-types';\nexport function FriendList({ friends }) {\n  return (\n    <AllFriendList>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <Friend key={id} avatar={avatar} name={name} isOnline={isOnline} />\n      ))}\n    </AllFriendList>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}