{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Documents\\\\GitHub\\\\goit-js-hw-11\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\nimport { StatisticsList, Title, Stats, Item, Label, Percentage } from './Statistics.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction randomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nexport default function Statistics(_ref) {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StatisticsList, {\n    children: [title === 'Upload stats' ? /*#__PURE__*/_jsxDEV(Title, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 35\n    }, this) : null, /*#__PURE__*/_jsxDEV(Stats, {\n      children: stats.map(stat => /*#__PURE__*/_jsxDEV(Item, {\n        color: `${randomHexColor()}`,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: stat.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Percentage, {\n          children: stat.percent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, stat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = Statistics;\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["C:/Users/anast/Documents/GitHub/goit-js-hw-11/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"names":["PropTypes","css","StatisticsList","Title","Stats","Item","Label","Percentage","randomHexColor","Math","floor","random","toString","Statistics","title","stats","map","stat","label","percent","id","propTypes","string","isRequired","arrayOf","shape","percentage","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,SACEC,cADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,UANF,QAOO,qBAPP;;;AAQA,SAASC,cAAT,GAA0B;AACxB,SAAQ,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACD;;AAED,eAAe,SAASC,UAAT,OAAsC;AAAA,MAAlB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAkB;AACnD,sBACE,QAAC,cAAD;AAAA,eACGD,KAAK,KAAK,cAAV,gBAA2B,QAAC,KAAD;AAAA,gBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,YAA3B,GAAoD,IADvD,eAEE,QAAC,KAAD;AAAA,gBACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAoB,QAAA,KAAK,EAAG,GAAET,cAAc,EAAG,EAA/C;AAAA,gCACE,QAAC,KAAD;AAAA,oBAAQS,IAAI,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA,oBAAaD,IAAI,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAWF,IAAI,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAduBP,U;AAgBxBA,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,KAAK,EAAEd,SAAS,CAACsB,MAAV,CAAiBC,UADH;AAErBR,EAAAA,KAAK,EAAEf,SAAS,CAACwB,OAAV,CACLxB,SAAS,CAACyB,KAAV,CAAgB;AACdL,IAAAA,EAAE,EAAEpB,SAAS,CAACsB,MAAV,CAAiBC,UADP;AAEdL,IAAAA,KAAK,EAAElB,SAAS,CAACsB,MAAV,CAAiBC,UAFV;AAGdG,IAAAA,UAAU,EAAE1B,SAAS,CAAC2B,MAAV,CAAiBJ;AAHf,GAAhB,CADK;AAFc,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\nimport {\r\n  StatisticsList,\r\n  Title,\r\n  Stats,\r\n  Item,\r\n  Label,\r\n  Percentage,\r\n} from './Statistics.styled';\r\nfunction randomHexColor() {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n}\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <StatisticsList>\r\n      {title === 'Upload stats' ? <Title>{title}</Title> : null}\r\n      <Stats>\r\n        {stats.map(stat => (\r\n          <Item key={stat.id} color={`${randomHexColor()}`}>\r\n            <Label>{stat.label}</Label>\r\n            <Percentage>{stat.percent}</Percentage>\r\n          </Item>\r\n        ))}\r\n      </Stats>\r\n    </StatisticsList>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}